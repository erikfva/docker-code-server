#!/usr/bin/with-contenv bash

mkdir -p /config/{extensions,data,workspace,.ssh}

if [ -n "${SUDO_PASSWORD}" ] || [ -n "${SUDO_PASSWORD_HASH}" ]; then
    echo "setting up sudo access"
    if ! grep -q 'abc' /etc/sudoers; then
        echo "adding abc to sudoers"
        echo "abc ALL=(ALL:ALL) ALL" >> /etc/sudoers
    fi
    if [ -n "${SUDO_PASSWORD_HASH}" ]; then
        echo "setting sudo password using sudo password hash"
        sed -i "s|^abc:\!:|abc:${SUDO_PASSWORD_HASH}:|" /etc/shadow
    else
        echo "setting sudo password using SUDO_PASSWORD env var"
        echo -e "${SUDO_PASSWORD}\n${SUDO_PASSWORD}" | passwd abc
    fi
fi

[[ ! -f /config/.bashrc ]] && \
    cp /root/.bashrc /config/.bashrc
[[ ! -f /config/.profile ]] && \
    cp /root/.profile /config/.profile

# fix permissions (ignore contents of /config/workspace)
find /config -path /config/workspace -prune -o -exec chown abc:abc {} +
chown abc:abc /config/workspace
chmod 700 /config/.ssh
if [ -n "$(ls -A /config/.ssh)" ]; then
    chmod 600 /config/.ssh/*
fi

if [ -n "${GIT_USER_NAME}" ]; then
    git config --global user.name "${GIT_USER_NAME}"
    git config --global user.email "${GIT_USER_EMAIL}"
fi

# echo $S3_ACCESS_KEY_ID:$S3_SECRET_ACCESS_KEY > /etc/passwd-s3fs
# chmod 600 /etc/passwd-s3fs
if [ -n "${S3_ACCESS_KEY_ID}" ]; then
    echo $S3_ACCESS_KEY_ID:$S3_SECRET_ACCESS_KEY > ${HOME}/.passwd-s3fs
    chmod 600 ${HOME}/.passwd-s3fs
    mkdir /mnt/s3
    s3fs ${S3_BUCKET} /mnt/s3 -o passwd_file=${HOME}/.passwd-s3fs -o url=${S3_ENDPOINT} -o use_path_request_style -o uid=1000 -o gid=1000 -o umask=0002 -o allow_other -o mp_umask=0002 -o multireq_max=5 -o use_cache=/tmp -o nonempty -o use_xattr -o enable_noobj_cache -o parallel_count=10 #-o dbglevel=info -o curldbg

    # add SSH file

    read_count=3
    interval_time=5
    ssh_file="/mnt/s3/.ssh/id_ed25519"
    for((i=1;i<=$read_count;i++))
    do
    if [ -f "$ssh_file" ]; then
        echo "ssh file exist ***"
        # eval "$(ssh-agent -s)"
        cp $ssh_file /config/.ssh/
        chown abc:abc /config/.ssh
        chmod 600 /config/.ssh/id_ed25519
        # ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
        # ssh-add /config/.ssh/id_ed25519
        # ssh -T git@github.com

        # cat /config/.ssh/id_ed25519 | tr -d '\r' | ssh-add - > /dev/null
        # ssh-keyscan github.com >> /config/.ssh/known_hosts
        # ssh-add /config/.ssh/id_ed25519
        # ssh-keyscan -t rsa github.com >> /config/.ssh/known_hosts
        # ssh -T git@github.com
        if [ -f "/mnt/s3/init-code-server.sh" ]; then
            echo "init-code-server.sh exist ***"
            chmod +x /mnt/s3/init-code-server.sh
            /mnt/s3/init-code-server.sh
        fi
        break
    else
        echo "ssh file not exist, wait $interval_time seconds"
        sleep $interval_time
    fi
    done
fi

# echo "installing extensions***"
# /app/code-server/bin/code-server  --extensions-dir /config/extensions  --install-extension IronGeek.vscode-env
mv  -v /temp/config/extensions/* /config/extensions/

if [ -n "${TOKEN_NGROK}" ]; then
    echo "starting ngrok"
    /app/ngrok config add-authtoken ${TOKEN_NGROK}
    mkdir -p /app/logs
    /app/ngrok http --log=stdout 8443 > /app/logs/ngrok.log & 
    sleep 7 
    grep "started tunnel" /app/logs/ngrok.log | awk '{print $NF}' > /config/workspace/https_url.txt
fi
